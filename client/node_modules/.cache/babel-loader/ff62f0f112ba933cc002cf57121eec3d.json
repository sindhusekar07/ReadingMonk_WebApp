{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SINDHUSEKAR\\\\reading-monk\\\\client\\\\src\\\\Scripts\\\\ChangePassword.js\";\nimport React from 'react';\n\nclass changePassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      let fields = this.state.fields;\n      fields[event.target.name] = event.target.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      let fields = this.state.fields;\n      let errors = {};\n      let isValid = true;\n\n      if (!fields['nPswd']) {\n        isValid = false;\n        errors['newP'] = \"Please enter new password.\";\n      }\n\n      if (!fields['cPswd']) {\n        isValid = false;\n        errors['confP'] = \"Please enter confirm password.\";\n      }\n\n      if (fields['nPswd'] !== fields[['cPswd']]) {\n        isValid = false;\n        errors['match'] = \"New Password and Confirm Password are not the same.\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n\n      if (isValid === true) {\n        this.setState({\n          fields: fields\n        });\n        console.log(this.state);\n        alert(\"password set\");\n      }\n    };\n\n    this.state = {\n      errors: {},\n      fields: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Password Change\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }\n    }, this.state.errors.match)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nPswd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"New Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: this.state.errors.newP ? \"error\" : null,\n      type: \"password\",\n      name: \"nPswd\",\n      placeholder: \"Enter new password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, this.state.errors.newP)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cPswd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: this.state.errors.confP ? \"error\" : null,\n      type: \"password\",\n      name: \"cPswd\",\n      placeholder: \"Enter confirm password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, this.state.errors.confP)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mySubmit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Set Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, \"Set Password\")))));\n  }\n\n}\n\nexport default changePassword;","map":{"version":3,"sources":["C:/Users/SINDHUSEKAR/reading-monk/client/src/Scripts/ChangePassword.js"],"names":["React","changePassword","Component","constructor","props","onChange","event","fields","state","target","name","value","setState","onSubmit","preventDefault","errors","isValid","console","log","alert","bind","render","match","newP","confP"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass changePassword extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        errors: {},\r\n        fields: {},\r\n      }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (event) => {\r\n      let fields = this.state.fields;\r\n      fields[event.target.name]=event.target.value;\r\n      this.setState({fields});\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n      event.preventDefault();\r\n      \r\n      let fields = this.state.fields;\r\n      let errors = {};\r\n      let isValid = true;\r\n\r\n      if (!fields['nPswd'] ){\r\n        isValid=false;\r\n        errors['newP'] = \"Please enter new password.\"\r\n      }  \r\n\r\n      if (!fields['cPswd']){\r\n        isValid=false;\r\n        errors['confP'] = \"Please enter confirm password.\"\r\n      } \r\n\r\n      if (fields['nPswd']!==fields[['cPswd']]){\r\n        isValid=false;\r\n        errors['match'] = \"New Password and Confirm Password are not the same.\"\r\n      }\r\n\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n      \r\n      if (isValid===true){\r\n        this.setState({fields:fields});\r\n        console.log(this.state);\r\n        alert(\"password set\")\r\n      }\r\n      \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <div className=\"form-wrapper\">\r\n              <h1>\r\n              Password Change\r\n            </h1>\r\n              \r\n              <form onSubmit={this.onSubmit}>\r\n                <div><span className=\"errorMessage\">{this.state.errors.match}</span></div>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"password\">\r\n                  <label htmlFor='nPswd'>New Password:</label>\r\n                  <input \r\n                    className={this.state.errors.newP ? \"error\" : null}\r\n                    type='password' \r\n                    name='nPswd' \r\n                    placeholder='Enter new password' \r\n                    onChange={this.onChange} \r\n                  />\r\n                  <span className=\"errorMessage\">{this.state.errors.newP}</span>\r\n                </div>\r\n\r\n                <div className=\"password\">\r\n                  <label htmlFor='cPswd'>Confirm Password:</label>\r\n                  <input \r\n                    className={this.state.errors.confP ? \"error\" : null}\r\n                    type='password' \r\n                    name='cPswd' \r\n                    placeholder='Enter confirm password' \r\n                    onChange={this.onChange} \r\n                  />\r\n                  <span className=\"errorMessage\">{this.state.errors.confP}</span>\r\n                </div>\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <div className=\"mySubmit\"><button type=\"submit\" value=\"Set Password\" >Set Password</button></div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}  \r\n\r\nexport default changePassword;"]},"metadata":{},"sourceType":"module"}